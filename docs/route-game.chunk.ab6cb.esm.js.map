{"version":3,"sources":["webpack:///./routes/game/questions.js","webpack:///./routes/game/index.js"],"names":["questions","getShuffledQuestions","array","i","length","j","Math","floor","random","Profile","Component","state","timer","time","gameState","questionIndex","nexting","startGame","this","stopGame","setState","GAMETIME","window","setTimeout","tick","requestAccelerometer","clearTimeout","tada","stopAccelerometer","next","ding","move","event","angleMatches","abs","gamma","DeviceOrientationEvent","requestPermission","then","response","startAccelerometer","catch","console","error","addEventListener","removeEventListener","playSound","document","getElementById","audio","pause","currentTime","play","renderEndState","class","type","onClick","renderPendingState","renderRunningState","question","renderStartingState","componentWillUnmount","render","props"],"mappings":"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","file":"route-game.chunk.ab6cb.esm.js","sourcesContent":["export const questions = [\n\t'Gripe',\n\t'Covid 19',\n\t'Pnemonia'\n];\n\nexport const getShuffledQuestions = () => {\n\tconst array = [...questions];\n\tfor (let i = array.length - 1; i > 0; i--) {\n\t\tlet j = Math.floor(Math.random() * (i + 1));\n\t\t[array[i], array[j]] = [array[j], array[i]];\n\t}\n\treturn array;\n};\n","import { h, Component } from 'preact';\nimport { getShuffledQuestions } from './questions';\n\nconst GAMETIME = 60;\nconst COUNTDOWN = 3;\nconst DEGREES = 15;\nconst USE_ACCELEROMETER = true;\n\nexport default class Profile extends Component {\n\tstate = {\n\t\ttimer: null,\n\t\ttime: null,\n\t\tgameState: 'pending',\n\t\tquestionIndex: 0,\n\t\tquestions: [],\n\t\tnexting: false\n\t};\n\n\tstartGame = () => {\n\t\tif (this.state.gameState === 'running') {\n\t\t\tthis.stopGame('restarting');\n\t\t}\n\n\t\tthis.setState(\n\t\t\t{\n\t\t\t\tgameState: 'starting',\n\t\t\t\ttime: GAMETIME + COUNTDOWN,\n\t\t\t\ttimer: window.setTimeout(this.tick, 1000),\n\t\t\t\tquestions: getShuffledQuestions(),\n\t\t\t\tquestionIndex: 0\n\t\t\t},\n\t\t\tthis.requestAccelerometer\n\t\t);\n\t};\n\n\tstopGame = (gameState = 'ended') => {\n\t\tif (this.state.timer) {\n\t\t\twindow.clearTimeout(this.state.timer);\n\t\t}\n\n\t\tthis.setState(\n\t\t\t{\n\t\t\t\tgameState,\n\t\t\t\ttime: null,\n\t\t\t\ttimer: null\n\t\t\t},\n\t\t\t() => {\n\t\t\t\tthis.tada();\n\t\t\t\tthis.stopAccelerometer();\n\t\t\t}\n\t\t);\n\t};\n\n\ttick = () => {\n\t\tif (this.state.time) {\n\t\t\tconst readyToStart = this.state.time - GAMETIME === 1;\n\t\t\tif (readyToStart) {\n\t\t\t\tthis.setState({ gameState: 'running' });\n\t\t\t}\n\n\t\t\tthis.setState({\n\t\t\t\ttime: this.state.time - 1,\n\t\t\t\ttimer: window.setTimeout(this.tick, 1000)\n\t\t\t});\n\t\t} else {\n\t\t\tthis.stopGame();\n\t\t}\n\t};\n\n\tnext = () => {\n\t\tthis.setState(\n\t\t\t({ questionIndex }) => ({\n\t\t\t\tquestionIndex: questionIndex + 1\n\t\t\t}),\n\t\t\tthis.ding\n\t\t);\n\t};\n\n\tmove = event => {\n\t\tconst angle = Math.abs(event.gamma);\n\t\tconst angleMatches = angle < DEGREES;\n\t\tconst { nexting, gameState } = this.state;\n\n\t\tif (angleMatches && !nexting && gameState === 'running') {\n\t\t\tthis.setState({ nexting: true }, this.next);\n\t\t} else if (!angleMatches && nexting) {\n\t\t\tthis.setState({ nexting: false });\n\t\t}\n\t};\n\n\trequestAccelerometer = () => {\n\t\tif (!USE_ACCELEROMETER) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (\n\t\t\ttypeof DeviceOrientationEvent !== 'undefined' &&\n\t\t\ttypeof DeviceOrientationEvent.requestPermission === 'function'\n\t\t) {\n\t\t\tDeviceOrientationEvent.requestPermission()\n\t\t\t\t.then(response => {\n\t\t\t\t\tif (response === 'granted') {\n\t\t\t\t\t\tthis.startAccelerometer();\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch(console.error);\n\t\t} else {\n\t\t\tthis.startAccelerometer();\n\t\t}\n\t};\n\n\tstartAccelerometer = () => {\n\t\twindow.addEventListener('deviceorientation', this.move, true);\n\t};\n\n\tstopAccelerometer = () => {\n\t\twindow.removeEventListener('deviceorientation', this.move, true);\n\t};\n\n\tding = () => {\n\t\tthis.playSound(document.getElementById('ding'));\n\t};\n\n\ttada = () => {\n\t\tthis.playSound(document.getElementById('tada'));\n\t};\n\n\tplaySound = audio => {\n\t\tif (!audio) return;\n\t\taudio.pause();\n\t\taudio.currentTime = 0;\n\t\taudio.play();\n\t};\n\n\tcomponentWillUnmount() {\n\t\tthis.stopAccelerometer();\n\t}\n\n\trenderEndState = () => {\n\t\treturn (\n\t\t\t<div class=\"game game--ended\">\n\t\t\t\t<h2>Acabou o Tempo!</h2>\n\t\t\t\t<button type=\"button\" class=\"button\" onClick={() => this.startGame()}>\n\t\t\t\t\tJogar de novo\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t);\n\t};\n\n\trenderPendingState = () => {\n\t\treturn (\n\t\t\t<div class=\"game game--pending\">\n\t\t\t\t<h2>Pronto para começar?</h2>\n\t\t\t\t<button type=\"button\" class=\"button\" onClick={() => this.startGame()}>\n\t\t\t\t\tIniciar\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t);\n\t};\n\n\trenderRunningState = () => {\n\t\tconst { time, questions, questionIndex } = this.state;\n\t\tconst question = questions[questionIndex];\n\n\t\treturn (\n\t\t\t<div class=\"game game--running\">\n\t\t\t\t<h2 class=\"question\">{question || <span>&nbsp;</span>}</h2>\n\t\t\t\t<time>{time}</time>\n\t\t\t\t<div>\n\t\t\t\t\t<button\n\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\tclass=\"button button--small\"\n\t\t\t\t\t\tonClick={() => this.next()}\n\t\t\t\t\t>\n\t\t\t\t\t\tPróximo\n\t\t\t\t\t</button>\n\t\t\t\t\t<button\n\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\tclass=\"button button--small\"\n\t\t\t\t\t\tonClick={() => this.stopGame()}\n\t\t\t\t\t>\n\t\t\t\t\t\tParar\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t};\n\n\trenderStartingState = () => {\n\t\tconst time = this.state.time - GAMETIME;\n\n\t\treturn (\n\t\t\t<div class=\"game game--starting\">\n\t\t\t\t<h2>Iniciando em: {time}</h2>\n\t\t\t</div>\n\t\t);\n\t};\n\n\trender(props, { gameState, time, questions, questionIndex }) {\n\t\tswitch (gameState) {\n\t\t\tcase 'ended':\n\t\t\t\treturn this.renderEndState();\n\t\t\tcase 'pending':\n\t\t\t\treturn this.renderPendingState();\n\t\t\tcase 'starting':\n\t\t\t\treturn this.renderStartingState();\n\t\t\tcase 'running':\n\t\t\t\treturn this.renderRunningState();\n\t\t}\n\n\t\treturn null;\n\t}\n}\n"],"sourceRoot":""}